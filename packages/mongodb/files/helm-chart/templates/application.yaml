---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Values.organization }}.{{ .Values.project }}
    app.kubernetes.io/managed-by: kubepak
  name: {{ .Release.Name }}
  namespace: {{ index .Values "packages" "argo-cd" "namespace" }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.environment }}-{{ .Values.organization }}-{{ .Values.project }}
  source:
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: {{ .Values.packages.mongodb.chartVersion }}
    chart: mongodb
    helm:
      parameters:
        - name: fullnameOverride
          value: "{{ .Release.Name }}"
        {{- if .Values.packages.mongodb.image.repository }}
        - name: image.repository
          value: "{{ .Values.packages.mongodb.image.repository }}"
        {{- end }}
        {{- if .Values.packages.mongodb.image.tag }}
        - name: image.tag
          value: "{{ .Values.packages.mongodb.image.tag }}"
        {{- end }}
        - name: auth.rootPassword
          value: "{{ .Values.packages.mongodb.auth.rootPassword }}"
        {{- if .Values.packages.mongodb.image.registry }}
        - name: image.registry
          value: "{{ .Values.packages.mongodb.image.registry }}"
        {{- end }}
        - name: persistence.size
          value: "{{ .Values.packages.mongodb.persistence.size }}"
        - name: tls.enabled
          value: "{{ .Values.packages.mongodb.tls.enabled }}"
        - name: tls.autoGenerated
          value: "false"
        - name: tls.caCert
          value: "{{ .Values.packages.mongodb.tls.caCert_b64 }}"
        - name: tls.caKey
          value: "{{ .Values.packages.mongodb.tls.caKey_b64 }}"
      values: |
        global:
          {{- include "common.registryCredentials.imagePullSecrets" . | nindent 10 }}
        nodeSelector:
          {{- toYaml .Values.packages.mongodb.pod.nodeSelector | nindent 10 }}
        tolerations:
          {{- toYaml .Values.packages.mongodb.pod.tolerations | nindent 10 }}
        affinity:
          {{- toYaml .Values.packages.mongodb.pod.affinity | nindent 10 }}
        resources:
          {{- toYaml .Values.packages.mongodb.pod.container.resources | nindent 10 }}
        arbiter:
          nodeSelector:
            {{- toYaml .Values.packages.mongodb.arbiter.pod.nodeSelector | nindent 12 }}
          tolerations:
            {{- toYaml .Values.packages.mongodb.arbiter.pod.tolerations | nindent 12 }}
          affinity:
            {{- toYaml .Values.packages.mongodb.arbiter.pod.affinity | nindent 12 }}
          resources:
            {{- toYaml .Values.packages.mongodb.arbiter.pod.container.resources | nindent 12 }}
        {{- if .Values.packages.mongodb.tls.enabled }}
        extraFlags:
          - --tlsAllowConnectionsWithoutCertificates
        {{- end }}
  destination:
    server: {{ .Values.kubernetes.server }}
    namespace: {{ .Release.Namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
...
